html, body {
	width: 100%; height: 100%;
	padding: 0; margin: 0;
	box-sizing: border-box;
	background: #333;
	color: #ddd;
}
body { padding: 5px; }
#reply {
	width: 400px;
}

.output {
	box-sizing: border-box;
	padding: 5px;
	border: 1px solid #bbb;
	background: #222;
	font-family: monospace;
	color: #ddd;
	font-size: 1.3em;
}

.output .name {
	color: #7bf;
	font-weight: bold;
}
.output .compound.array > .content > .prop > .name {
	color: #f95;
}
.output .compound > .name::after {
	color: #bbb;
	font-weight: normal;
}
.output .compound.object > .name::after {
	content: ': {';
}
.output .compound.array > .name::after {
	content: ': [';
}
.output .primitive > .name::after {
	content: ':';
	color: #bbb;
}

.output .prop::after {
	content: ',';
	color: #bbb;
}
.output .prop.compound.object::after {
	content: '},';
}
.output .prop.compound.array::after {
	content: '],';
}
.output .prop:last-of-type::after,
.output .prop.compound.empty::after {
	content: '';
}
.output .prop.compound.object:last-of-type::after {
	content: '}';
}
.output .prop.compound.array:last-of-type::after {
	content: ']';
}

.output .name i {
	color: #999;
	font-weight: normal;
}

.output .compound > .content {
	padding: 5px;
	padding-left: 2em;
	border-left: 1px dashed #444;
	margin-left: 5px;
	margin-bottom: 3px;
}

/*
	colors: #95f #f95 #59f #3d5 #7bf #f54
*/
.output .compound > .name { cursor: pointer; }
.output .compound.collapsed > .content,
.output .compound.empty > .content {
	display: none;
}
.output .compound.collapsed::after {
	content: '' !important;
}
.output .compound.collapsed > .name::after {
	background: #181818;
}
.output .compound.object.collapsed > .name::after {
	content: ': { ... },';
}
.output .compound.array.collapsed > .name::after {
	content: ': [ ... ],';
}
.output .compound.object.collapsed:last-of-type > .name::after {
	content: ': { ... }';
}
.output .compound.array.collapsed:last-of-type > .name::after {
	content: ': [ ... ]';
}

.output .compound.object.empty > .name::after {
	content: ': { },';
}
.output .compound.array.empty > .name::after {
	content: ': [ ],';
}
.output .compound.object.empty:last-of-type > .name::after {
	content: ': { }';
}
.output .compound.array.empty:last-of-type > .name::after {
	content: ': [ ]';
}

.output .primitive > .content.number { color: #f95; }
.output .primitive > .content.string { color: #59f; }
.output .primitive > .content.boolean { color: #3d5; font-weight: bold; }

.output .primitive > .content.string::before,
.output .primitive > .content.string::after {
	content: '"';
}
